input: "test.jar"
output: "%name%.obf.jar"

exclude: # list of class exclusions
#  - "Main"

transformers:
  order:
    - fieldshuffler
    - linenumberremover
    - stringencryptor
    - blockshuffler
    - gotoreplacer
    - fakejumpadder
    - fieldvalueextractor
    - classrenamer
    - fieldrenamer
    - numberencryptor
    - methodextractor

  renamers:
#    dictionary: "\\/_üöäÜÖÄ"
    length:  12
    classes: false  # Rename classes
    fields:  false  # Rename fields
    methods: false # Rename methods
#    localVariables: true  # Rename local variables
#    enums: FULL   # NONE = Don't rename enums, FULL = Rename enum, TO_STRING = Rename enum, but override the toString() call
#
  removers:
    lineNumbers: true
#    generics:    false
#
  string: # More options?
    enabled: true
    convertToCharArray: false
    complexity: 2 # 1-5

  extractor:
    enabled: false
    chance: 100 # 0-100
    extractMethodCalls: true
    extractLdcInsns: true
    extractOpInsns: true

  flow:
    enabled: true

    shuffleBlocks: false
    # size of instruction blocks
    # less = more obfuscation, not recommended to set lower than 3
    blockSizeMin: 8
    blockSizeMax: 10

    addFakeJumps: true # randomly adds fake jumps everywhere
    fakeJumpChancePercent: 5

    extractFieldValues: true # extracts values of static fields into a static block
    addNativeAnnotation: false # adds an annotation for later native obfuscation TODO: implement
    encryptNumbers: true # encrypts numbers
    replaceGotos: true # replaces gotos with random real jumps

#    extractMethods: true # randomly extracts instructions into method calls
#    extractMethodChance: 30 # chance of extracting (0-100)
#    layers: 5 # 1-20, bigger the number the slower to obfuscate
#
#  minecraft:
#    removeOptifineObfIds: true # remove the CF___ thing in the fields optifine leaves behind
#
  shuffler:
#    methods: false
    fields: true
# ...
